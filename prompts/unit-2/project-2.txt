Project 2 - Bit Problems
Inverting the World
Bit is in a world with a blue picture on a white background:

bbbbbbbbbbbbb
bbbb-bbb-bbbb
bbbbb-b-bbbbb
bbbbbb-bbbbbb
bbbbbb-bbbbbb
bbbbbb-bbbbbb
bbbbbbbbbbbbb
0 0
0

Invert the entire world. Blue should become empty, and empty should become blue. The final world should look like this:

-------------
----b---b----
-----b-b-----
------b------
------b------
------b------
-------------
12 0
0

There is a second world that looks like this:

-------------
-------------
-----b-b-----
-------------
----b---b----
-----bbb-----
-------------
0 0
0

and when Bit is done it should look like this:

bbbbbbbbbbbbb
bbbbbbbbbbbbb
bbbbb-b-bbbbb
bbbbbbbbbbbbb
bbbb-bbb-bbbb
bbbbb---bbbbb
bbbbbbbbbbbbb
12 0
0

You can find starter code in invert.py.

If students have questions about how to begin this problem, you can refer them to Project 1's grassy-field problem. Explain that the grassy-field problem is very similar to this problem, except that this problem has an additional function to invert the square.

Blue S
Move Bit to the right edge of the grid. Along the way, if Bit encounters a green square, draw a blue “S”. The bends in the “S” are marked by blocked squares.

The first world looks like this:

kkkkkkk----kk
kk---kk-kkkkk
kk-kkkk-kkkkk
--g----g-----
kkk-kkkk-kkkk
k---kkkk-kkkk
kkkkk----kkkk
0 3
0


and at the end should look like this:

kkkkkkkbbbbkk
kkbbbkkbkkkkk
kkbkkkkbkkkkk
--bb---bb----
kkkbkkkkbkkkk
kbbbkkkkbkkkk
kkkkkbbbbkkkk
12 3
0


The second world looks like this:

-------kkkkkk----------k-----k---
kkkkk-kk----k--kkk---------------
kk--k----kkkk-k--k---------------
kk-kkkkk-kkkkkk-kk-----k-k-------
--g-----g------g--------g--------
kkk-kkkkk-kkkkkk--------k--------
-k--k---k-k----------------------
--kkkkkkk-k------k---------------
-----k----kkkkkkkk---------------
-----kkkkkk---------------k------
0 5
0

and at the end should look like this:

-------kkkkkk----------kbbbbbk---
kkkkk-kkbbbbk--kkk------b--------
kkbbk---bkkkk-kbbk------b--------
kkbkkkkkbkkkkkkbkk-----kbk-------
--bb----bb-----bb-------bb-------
kkkbkkkkkbkkkkkkb-------kb-------
-kbbk---kbk-----b--------b-------
--kkkkkkkbkbbbbbbk-------b-------
-----kbbbbkkkkkkkk-------b-------
-----kkkkkkbbbbbbbbbbbbbbbk------
32 5
0



You can find starter code in blue_s.py.

Escape
Bit is exploring a cave and finds a secret gem that has been hidden for centuries:

bbk------------------
kbkkkk------------gkk
kbr--k--kkk-------gkk
kkkk-k------------gkk
k----kkkkkkkkkkk--gkk
k-kkkkkkkkkkkkkk--gkk
k-----------------gkk
kkkkkkkkkkkkkkkkkkkkk
2 5
0


Unfortunately, his enemies have started to flood the cave with water! Help Bit escape by (1) picking up the gem, (2) running through the cave, (3) climbing the moss-covered cliff at the end. The final world should look like this:

bbk----------------r-
kbkkkk------------gkk
kbbbbk--kkk-------gkk
kkkkbk------------gkk
kbbbbkkkkkkkkkkk--gkk
kbkkkkkkkkkkkkkk--gkk
kbbbbbbbbbbbbbbbbbgkk
kkkkkkkkkkkkkkkkkkkkk
20 7
0


The water has followed Bit as they run, and Bit has put down the gem to examine it.

There is a second world that looks like this:

bbk--kkkkkkkkkkkkk---
kbkkkkk-------kk--gkk
kbg-----kkkkk-kk--gkk
kkkkkkkkkkk---kk--gkk
k-------------kk--gkk
k-kkkkkkkkkkkkkk--gkk
k-----------------gkk
kkkkkkkkkkkkkkkkkkkkk
2 5
0


and the at the end should look like this:

bbk--kkkkkkkkkkkkk-g-
kbkkkkkbbbbbbbkk--gkk
kbbbbbbbkkkkkbkk--gkk
kkkkkkkkkkk--bkk--gkk
kbbbbbbbbbbbbbkk--gkk
kbkkkkkkkkkkkkkk--gkk
kbbbbbbbbbbbbbbbbbgkk
kkkkkkkkkkkkkkkkkkkkk
20 7
0


Note that the gem may be a ruby (red) or an emerald (green).

You can find starter code in escape.py.

Pools of Gems
When Bit was examining the gem, they discovered a secret ingredient that lets them replicate gems. So Bit goes to their backyard, where there are a bunch of empty holes. Bit picks up a gem, then fills the next pool with copies of that same gem.

One of the starting worlds looks like this:

--------------------------------
-r------g-----------b-----------
kkk----kkkkkk------kkkk-----kkkk
kkk----kkkkkk------kkkk-----kkkk
kkk----kkkkkkkkkkkkkkkk-----kkkk
kkkkkkkkkkkkkkkkkkkkkkk-----kkkk
kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
0 5
0


at the end, the world should look like this:

--------------------------------
--------------------------------
kkkrrrrkkkkkkggggggkkkkbbbbbkkkk
kkkrrrrkkkkkkggggggkkkkbbbbbkkkk
kkkrrrrkkkkkkkkkkkkkkkkbbbbbkkkk
kkkkkkkkkkkkkkkkkkkkkkkbbbbbkkkk
kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
31 5
0


The other starting world looks like this:

---------------------------------------
-b---------r--------g--------b---------
kkk----kkkkkk------kkkk--kkkkkkkkkk---k
kkk----kkkkkk------kkkk--kkkkkkkkkk---k
kkkkkkkkkkkkk------kkkk--kkkkkkkkkk---k
kkkkkkkkkkkkkkkkkkkkkkk--kkkkkkkkkk---k
kkkkkkkkkkkkkkkkkkkkkkk--kkkkkkkkkk---k
0 5
0


at the end, the world should look like this:

---------------------------------------
---------------------------------------
kkkbbbbkkkkkkrrrrrrkkkkggkkkkkkkkkkbbbk
kkkbbbbkkkkkkrrrrrrkkkkggkkkkkkkkkkbbbk
kkkkkkkkkkkkkrrrrrrkkkkggkkkkkkkkkkbbbk
kkkkkkkkkkkkkkkkkkkkkkkggkkkkkkkkkkbbbk
kkkkkkkkkkkkkkkkkkkkkkkggkkkkkkkkkkbbbk
38 5
0
