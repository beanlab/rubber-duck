name: Build, Push, and Deploy to AWS Infrastructure

on:
  push:
    branches:
      - master
      - 62-aws-s3-and-fargate-deployment
  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      IMAGE_REPO: 844825014198.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/beanlab/rubber-duck
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Run Docker build script
        run: bash ./build_docker.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ env.IMAGE_REPO }}

      - name: Push Docker image to ECR
        run: |
          docker push ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}

      - name: Complete Docker push
        run: echo "Docker image pushed to ECR successfully!"

  deploy_to_cloudformation:
    needs: [build_and_push]
    runs-on: ubuntu-latest
    env:
      EXECUTION_ROLE: ${{ secrets.EXECUTION_ROLE }}
      TASK_ROLE: ${{ secrets.EXECUTION_ROLE }}
      VPC_ID: ${{ secrets.VPC_ID }}
      SUBNET_IDS: ${{ secrets.SUBNET_IDS }}
      SECURITY_GROUP_ID: ${{ secrets.SECURITY_GROUP_ID }}
      CPU: "1024"
      MEMORY: "2048"
      ENV_FILE_S3_PATH: ${{ secrets.ENV_FILE_S3_PATH }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy ECS Infrastructure with CloudFormation
        id: deploy
        run: |
          aws cloudformation deploy \
            --stack-name rubber-duck-production \
            --template-file infra/ecs-infra.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              Environment=production \
              ClusterName=DuckCluster-rubber-duck-production \
              TaskDefinitionFamily=rubber-duck-production \
              ContainerName=duck-container-production \
              ImageURI=${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }} \
              VpcId="${VPC_ID}" \
              SubnetIds="${SUBNET_IDS}" \
              SecurityGroupId="${SECURITY_GROUP_ID}" \
              ExecutionRoleArn="${EXECUTION_ROLE}" \
              TaskRoleArn="${TASK_ROLE}" \
              Cpu="${CPU}" \
              Memory="${MEMORY}" \
              EnvFileS3Path="${ENV_FILE_S3_PATH}"
