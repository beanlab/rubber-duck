name: Build, Push, and Deploy to AWS Infrastructure

on:
  push:
    branches:
      - master
      - 62-aws-s3-and-fargate-deployment
  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Run Docker build script
        run: bash ./build_docker.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin 844825014198.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/beanlab/rubber-duck

      - name: Push Docker image to ECR
        run: |
          docker push 844825014198.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/beanlab/rubber-duck:${{ github.sha }}

      - name: Complete Docker push
        run: echo "Docker image pushed to ECR successfully!"

  deploy_to_cloudformation:
    needs: [build_and_push]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy ECS Infrastructure with CloudFormation
        id: deploy
        run: |
          aws cloudformation deploy \
            --stack-name rubber-duck-production \
            --template-file infra/ecs-infra.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              Environment=production \
              ClusterName=DuckCluster-rubber-duck-production \
              TaskDefinitionFamily=rubber-duck-production \
              ContainerName=duck-container-production \
              ImageURI=844825014198.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/beanlab/rubber-duck:${{ github.sha }} \
              VpcId=${{ secrets.VPC_ID }} \
              SubnetIds=${{ secrets.SUBNET_IDS }} \
              SecurityGroupId=${{ secrets.SECURITY_GROUP_ID }} \
              ExecutionRoleArn=${{ secrets.EXECUTION_ROLE }} \
              TaskRoleArn=${{ secrets.EXECUTION_ROLE }} \
              Cpu=1024 \
              Memory=2048 \
              EnvFileS3Path=${{ secrets.ENV_FILE_S3_PATH }}
