name: Build, Push, and Deploy to AWS Fargate

on:
  push:
    branches:
      - master
      - 62-aws-s3-and-fargate-deployment
  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Run Docker build script
        run: bash .github/workflows/build_docker.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 844825014198.dkr.ecr.us-west-2.amazonaws.com

      - name: Push Docker image to ECR
        run: docker push 844825014198.dkr.ecr.us-west-2.amazonaws.com/beanlab/rubber-duck:latest #need to refactor this to use the test-docker image. Update the URI

  deploy_to_fargate:
    needs: [build_and_push]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Register ECS Task Definition and Deploy
        run: |
          bash .github/workflows/esc_setup.sh \
            "${{ secrets.ECS_CLUSTER_NAME }}" \
            "${{ secrets.ECS_SERVICE_NAME }}" \
            "${{ secrets.TASK_DEFINITION_FAMILY }}" \
            "${{ secrets.IMAGE_URI }}" \
            "${{ secrets.AWS_REGION }}" \
            "${{ secrets.EXECUTION_ROLE }}" \
            "${{ secrets.ENV_FILE_S3_PATH }}"

      - name: Verify Task Definition Registration
        run: |
          aws ecs list-task-definitions --family "${{ secrets.TASK_DEFINITION_FAMILY }}" --region ${{ secrets.AWS_REGION }}

      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster "${{ secrets.ECS_CLUSTER_NAME }}" \
            --service "${{ secrets.ECS_SERVICE_NAME }}" \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}

      - name: Check ECS Service Status
        run: |
          aws ecs describe-services \
            --cluster "${{ secrets.ECS_CLUSTER_NAME }}" \
            --services "${{ secrets.ECS_SERVICE_NAME }}" \
            --region ${{ secrets.AWS_REGION }}
